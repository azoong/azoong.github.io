/* COMMON */
body {
  color: #333; /* when the same number repeats 6 times we can shorten it 3 times */
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  font-family: 'Nanum Gothic', sans-serif;
  /* font-family is from Google fonts website */
}
a {
  text-decoration: none;
}
img {
  display: block;
  /* it makes a logo image as a box so removes the bottom line */
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: .4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse {
  /* when we write code element__element2 means element2 belongs to element, --means status   */
  /* since we used class indicator two times it has 20 scores so it will applicate first than just btn */
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
  /* this case, two class indicators and one virtual class indicator, 30 */
}
.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592B18;
}
.btn.btn--gold {
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #D9AA8A;
}
.btn.btn--white {
  color: #fff;
  border: solid 1px #fff;
  background-color: transparent;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  transform: translateX(-150px);
}
.back-to-position.to-left {
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}

/* HEADER */
header {
  width: 100%;
  /* orginally it was auto, but then this badge doesn't work when we minimize the size of screen */
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  /* will be placed by browser's viewport */
  top: 0; 
  z-index: 9;
}
header > .inner {
  height: 120px;
  /* align in the middle */
  position: relative;
}
header .logo {
  height: 75px;
  position: absolute;
  /* it is placed by parents, but then the parents' position should be defined */
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}
header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
  /* 왜 상위요소인 sub-menu에만 flex를 적용하면 안될까? */
}
header .sub-menu ul.menu li {
  position: relative;
  /* since here was no position then relative, otherwise if it already existed then no change */
}
header .sub-menu ul.menu li::before {
  content: "";
  /* display: block; we can clarify or the other is okay, check below comment */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
  /* : pseudo-class, :: pseudo-element(inline element(nonsizeable), requires content="")  */
  /* when position is absolute or fixed, it automatically changes into block-element */
}
header .sub-menu ul.menu li:first-child:before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12;
  padding: 11px 16px;
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
  /* the exact color name < color number */
}
header .sub-menu .search {
  height: 34px;
  position: relative;
}
header .sub-menu .search input{
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  /* size will be set as what we set and we can put padding */
  border-radius: 5px;
  outline: none;
  /* outline: if cursor is there then blue line appears */
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}
header .sub-menu .search input:focus{
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: all .4s;
  /* after setting below stuff, we need an effect to opacify icon softly*/
}
header .sub-menu .search.focused .material-icons {
 opacity: 0; 
 /* class search and focused have to be basic combinator(so put together and it should be qualified for both conditions) */
}
header .main-menu {
  position: absolute;
  bottom: 0px;
  right: 0px;
  z-index: 1;
  /* to hover over badge element, put z-index to be the top */
  display: flex;
}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
  /* caution: put hover to item not item__name */
}
header .main-menu .item .item__contents {
    width: 100%;
    position: fixed;
    left: 0;
    display: none;
/* if we don't use top or bottom so we don't have vertical value then we use the original position
if we use absolute it would be placed by parents so it can't strech to both end of left and right */
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* height: 200px; */
/* we had this height before writing li format but since we wrote down below,
height would be automatically set by the inner source */
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
/* if we don't use '>' then it will choose all ul element under contents__menu,
 so we mention it to choose direct(first) one below */
}
header .main-menu .item .item__contents .contents__menu > ul >li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul >li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul >li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul >li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700; 
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}
header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
  cursor: pointer;
}

/* FOOTER */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before {
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  position: absolute;
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
}
footer .menu li:last-child::before {
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  display: block;
  /* to enlarge the size of a tag to click easily for users */
}
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
}
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  margin: 30px auto 0;
}
/* img요소가 display: block; + margin: 0 auto인 경우, width속성이 없이도 가운데 정렬이 가능, 현재 프로젝트에서 img요소에 display:block; 지정 */
